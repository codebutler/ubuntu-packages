#!/usr/bin/make -f

CFLAGS = -Wall -g

DEB_BUILD_ARCH ?=$(shell dpkg-architecture -qDEB_BUILD_ARCH)
ifneq (,$(findstring sparc,$(DEB_BUILD_ARCH)))
   CONFIGURE_OPTS = --with-cc-opt="-m32 -mcpu=ultrasparc"
endif

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

config.status:
	dh_testdir
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
		cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
		cp -f /usr/share/misc/config.guess config.guess
endif
	PATH=$$PWD/debian/bin:$$PATH && echo $$PATH
	PATH=$$PWD/debian/bin:$$PATH && ruby --version

	PATH=$$PWD/debian/bin:$$PATH && ./configure --conf-path=/etc/nginx/nginx.conf \
	    --error-log-path=/var/log/nginx/error.log \
	    --http-client-body-temp-path=/var/lib/nginx/body \
	    --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
	    --http-log-path=/var/log/nginx/access.log \
	    --http-proxy-temp-path=/var/lib/nginx/proxy \
	    --http-scgi-temp-path=/var/lib/nginx/scgi \
	    --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
	    --lock-path=/var/lock/nginx.lock \
	    --pid-path=/var/run/nginx.pid \
	    --with-debug \
	    --with-http_dav_module \
	    --with-http_flv_module \
	    --with-http_geoip_module \
	    --with-http_gzip_static_module \
	    --with-http_image_filter_module \
	    --with-http_realip_module \
	    --with-http_stub_status_module \
	    --with-http_ssl_module \
	    --with-http_sub_module \
	    --with-http_xslt_module \
	    --with-ipv6 \
	    --with-sha1=/usr/include/openssl \
	    --with-md5=/usr/include/openssl \
	    --with-mail \
	    --with-mail_ssl_module \
            --add-module=$(CURDIR)/passenger-3.0.3/ext/nginx/ \
            $(CONFIGURE_OPTS)

build: config.status
	$(MAKE) build

build-stamp:
	dh_testdir
	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp
	[ ! -f Makefile ] || $(MAKE) clean

ifneq "$(wildcard /usr/share/misc/config.sub)" ""
		rm -f config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
		rm -f config.guess
endif
	dh_clean

install:
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	dh_install

binary-indep:

binary-arch: install
	dh_testdir
	dh_testroot
	dh_installchangelogs CHANGES
	dh_installdocs
	dh_installinit -r --no-start
	dh_installman debian/nginx.1
	dh_installlogrotate
	dh_link
	dh_strip --dbg-package=nginx-dbg
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch

.PHONY: build clean binary-indep binary-arch binary install
